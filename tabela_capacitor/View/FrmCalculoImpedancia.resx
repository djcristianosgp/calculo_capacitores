<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCalcular.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAXBJREFUWEft
        lz0vBFEUhocCUYmIXkL8BhIVrdJf0Cr5CVqlSq/Q+A1ERaNSIArdzs6sxkfieGbnvSLsmK87YyP7JO/m
        Zuec97yZzM69G4wYSszCTXSN9sxsXF+3h1nM8C6z+7o0i9Z1qR0YevIlgBSdm3VWVdIsDDz+GaCvd8S1
        aEGlzZAOGRjA6QUdoBm1+AXjvABOHe7GLotJtfoB46IBnG4IssViTBb1wLBsACm8QGuyqQ5mFQN86pSf
        8qLsyoNB3QCJXrkbh2ZP87ItDs0+AjiF6YN6NyX7fGjyGcDpgSDbLPJf7RQ3EQBFyYvsSGOyoehfBrgi
        wIZG/A7FPgPcMzh5SRXf1mnyESBmME//47Rsi0NznQBviI2qNye78mBQNQB9vWXZVCc1GjggS2ccVlbU
        Xh8Miwa41QPmZxd0YJwXgI/uDosJtfgF86wAz2ww++x0syptBgZ9P5TqLBgvqaRZhuBY/sd/TEa0RxB8
        AIUGkSewEAItAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>